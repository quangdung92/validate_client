<style>
	.errorclass {
		font-family: "Comic Sans MS", cursive, sans-serif;
		margin-bottom: 13px;
		margin-top: 5px;
		font-size: 1em;
		font-weight: bold;
		opacity: 0.4;
	}
	.inputBox {
		border-radius: 5px 5px;
		height: 10px;
	}
	body {
		background-image: url('/assets/bg.jpg');
		background-repeat: no-repeat;
		background-color: #C0DEED;
	};
</style>
<script>
	function contains(elem, array) {
		for (var i = 0; i < array.length; i++) {
			if (array[i] === elem) {
				return false;
			}
		}
		return true;
	}


	jQuery.validator.addMethod("CheckUser", function() {
		var names = $(".divname").map(function() {
			return $.trim($(this).text());
		}).get();
		var name = $("#username").val();
		return contains(name, names);
	});
	jQuery.validator.addMethod("Checkmail", function() {
		var mails = $(".divmail").map(function() {
			return $.trim($(this).text());
		}).get();
		var email = $("#email").val();
		return contains(email, mails);
	});
	jQuery.validator.addMethod("Checkphone", function() {
		var phones = $(".divphone").map(function() {
			return $.trim($(this).text());
		}).get();
		var phonenumber = $("#phonenumber").val();
		return contains(phonenumber, phones);
	});
	jQuery.validator.addMethod("Checkavailable", function() {
		var mails = $(".divmail").map(function() {
			return $.trim($(this).text());
		}).get();
		var email = $("#email").val();
		var phones = $(".divphone").map(function() {
			return $.trim($(this).text());
		}).get();
		var phonenumber = $("#phonenumber").val();
		if (contains(phonenumber, phones) == false && contains(email, mails) == false) {
			return false;
		} else {
			return true;
		}
	});

	$(document).ready(function() {
		$("#check").validate({
			success : function(label, element) {
				label.removeClass("errorclass")
				label.text('OK!').css({
				"color" : "blue",
				"margin-bottom" : "13px",
				"margin-top" : "5px",
				"font-family" : "Comic Sans MS, cursive, sans-serif",
				"font-weight" : "bold",
				"opacity" : "0.4",
				});
				$(element).css({
					"border-color" : "",
					"background-color" : ""
				});
			},

			submitHandler : function(form) {
				form.submit();
				$("#valid").html("Congratulations! your account has been create").css("font-size", "0.8em");
				$("#valid").css("color", "#61ef80");
				$("#hideMsg").css("display", "block");
				var sec = $("#hideMsg span").text();
				timer = setInterval(function() {
					$('#hideMsg span').text(--sec);
					if (sec == 0) {
						$('#hideMsg').fadeOut('fast');
						clearInterval(timer);
					}
				}, 1000);
			},
			rules : {
				"username" : {
					required : true,
					minlength : 3,
					CheckUser : true
				},
				"email" : {
					required : {
						depends : function(element) {
							return ($('#phonenumber').val() == '');
						}
					},
					email : true,
					Checkmail : {
						depends : function(element) {
							return ($('#phonenumber').val() == '');
						}
					},
					Checkavailable : true
				},
				"password" : {
					required : true,
					minlength : 3
				},
				"phonenumber" : {
					required : {
						depends : function(element) {
							return ($('#email').val() == '');
						}
					},
					minlength : 3,
					number : true,
					Checkphone : {
						depends : function(element) {
							return ($('#email').val() == '');
						}
					},
					Checkavailable : true
				}
			},
			messages : {
				"username" : {
					required : "Required",
					minlength : "Min Length is 3 characters",
					CheckUser : "Name already taken"
				},
				"email" : {
					required : "email or phone number not null!",
					email : "A valid email address is required",
					Checkmail : "Make sure you have phone number",
					Checkavailable : "Email or phonenumber has been taken!"
				},
				"password" : {
					required : "Required",
					minlength : "Min Length is 3 characters"
				},
				"phonenumber" : {
					required : "email or phone number not null!",
					minlength : "Min Length is 3 characters",
					number : "phone must be number!",
					Checkphone : "Make sure you have email",
					Checkavailable : "Email or phonenumber has been taken!"
				}
			},
			errorPlacement : function(label, element) {
				element.css({
					"border-color" : "#f7f7f7",
					"background-color" : "#fbe1e1",
					"opacity" : "0.6"
				});
				element.after(label);
				label.addClass("errorclass");
			},
		});
	});

</script>
<div class="medium-4 medium-centered row" align="center" style="margin-top: 50px; background-color: white; padding: 0px; border-radius: 8px 8px">
	<div class="medium-12 medium-centered columns" id="Sign" style="margin: 0px">
		<h2 style="display: inline-block"><i class="step fi-social-twitter size-60" id="valid" style="color: #b5daff">&nbspSign up</i></h2>
		<div id="hideMsg" style="display: none">
			Redirect in <span>5</span> seconds
		</div>
	</div>
	<div class="medium-8 medium-centered columns" style="margin: 0px">
		<%= form_tag(create_path, :id => "check") do %>
		Username
		<br />
		<%= text_field_tag 'username', nil, :class => 'inputBox'%>
		Password
		<%= password_field_tag 'password', nil, :class => 'inputBox'%>
		Email
		<%= text_field_tag 'email', nil, :class => 'inputBox'%>
		Phonenumber
		<%= text_field_tag 'phonenumber', nil, :class => 'inputBox'%>
		<%= submit_tag("Sign",
		class: "button [tiny small large]", :id => "button")%>
		<%end%>
	</div>
</div>
<% @usernames.each do |t| %>
<div class="divname" style="display: none">
	<%= t.username %>
</div>
<%end%>
<% @phones.each do |t| %>
<div class="divphone" style="display: none">
	<%= t.phonenumber %>
</div>
<%end%>
<% @emails.each do |t| %>
<div class="divmail" style="display: none">
	<%= t.email %>
</div>
<%end%>
